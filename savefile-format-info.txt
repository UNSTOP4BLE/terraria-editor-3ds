
// HEADER STRUCTURE
//some data 2bytes
//filename length 1 byte
//some data 2bytes
//filename 26 bytes
//some data 78 bytes minimum (goes up by 2 every character added to the filename)

// INVENTORY
//main inventory 5*50 bytes (5 bytes each item, 50 slots)
//coins inventory 5*4 bytes (5 bytes each item, 4 slots)
//coins inventory 5*4 bytes (5 bytes each item, 4 slots)

// END OF FILE

//filename length gets changed by 2 based on filename length in the file
struct [[gnu::packed]] Header {
    uint8_t padding[0x2]; //no idea what data this is
    uint8_t filenamelen[0x1]; //from 1 to 13
    uint8_t padding2[0x2]; //no idea what data this is
    uint8_t filename[?]; //26(13 chars max) max, but can be 2 (1 char min), check filenamelen
    uint8_t somedata[0x46]; //no idea what this data is
};

struct [[gnu::packed]] Item {
    uint8_t itemid;
    uint8_t idk; //no idea what this is
    uint8_t count; //count of item
    uint8_t idk2; //weapon attribute maybe?
    uint8_t idk3; //no idea what this is
};

struct [[gnu::packed]] CharacterFile {
    Header header;
    Item items[50];
    Item coins[4];
    Item ammo[4];
    uint8_t fileend[?]; //B74(2932) for 1, B83(2947) for 12, B83(2947) for 123, B8F(2959) for finaltest (its not linked to the filename, no idea what it changes based on)
};
